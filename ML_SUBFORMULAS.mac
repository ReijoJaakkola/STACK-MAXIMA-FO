/*
Code for forming the set of subformulas for
a sentence in modal logic.

@Reijo Jaakkola
@reijo.jaakkola@tuni.fi
*/

/*
We agree here, that formulas F of modal logic are formed with
the following syntax

F ::= p | (F&F) | (F|F) | !F | (F->F) | (F<->F) | DF | SF
*/

/*
Function for finding the index where the innermost (binary) connective
in a formula begins.

@param[in]  F   Formula for which we whish to find the innermost operation.
@param[in]  d   Should be either 0 or 1, depending on whether the formula should
				contain outermost brackets or not.

@return         Index for the innermost operator, or -1 if none found.
*/
innerMostOperator(F, d) := block([index, c],
    index: -1,
    c: 0,
    for i:1 thru slength(F) do (
        if(charat(F,i)="(") then (  
            c: c + 1
        )
        else if(charat(F,i)=")") then (
            c: c - 1
        )
        /* Inner most operation is located in the place where c = d. */
        else if((charat(F,i)="&" or charat(F,i)="|" or charat(F,i)="-" or charat(F,i)="<") and c=d) then (
            index: i,
            /* Here to end the loop (why break does not work???). */
            i: slength(F)
        )
   ),
   return(index))$

/*
Function which removes all the given characters from a given string.
Does not affect the original string.

@param[in]  CHAR    Characters that should be removed.
@param[in]  S       String for which we want to do the clearing.

@return             Cleared string.
*/
clearString(CHAR,S):=block([],
    for i:1 thru length(CHAR) do (
        S: sremove(CHAR[i],S)
    ),
    return(S))$

/*
Function which checks whether a given formula contains any logical constants.

@param[in]  F       The given formula.

@return             True iff F has no logical constants.

*/
notContainsLogicalConstants(F):=block([Formula],
    cleanedFormula: clearString(["S","D","!","&","|","->","<->"],F),
    if (slength(cleanedFormula) = slength(F)) then (return(true))
    else (return(false)))$

/*
Function for forming the set of subformulas of a given formula
of modal logic.

@param[in]   F   The formula of modal logic.

@return          A set which contains all the subformulas of F.
*/
subformulas(F) := block([subf, subf1, subf2, index],
	/*If F does not contain logical constants, then return the singelton of F.*/
	if (notContainsLogicalConstants(F)) then (
		return({F}))
	/*The case of unary connectives.*/
	else if (elementp(charat(F,1), {"S","D","!"})) then (
		subf: subformulas(substring(F,2,slength(F)+1)),
		return(union({F},subf)))
	else (
		index: innerMostOperator(F,1),
		if (elementp(charat(F,index),{"|","&"})) then (
			subf1: subformulas(substring(F,2,index)),
			subf2: subformulas(substring(F,index + 1, slength(F))),
			return(union({F},union(subf1,subf2))))
		else if (charat(F,index) = "-") then (
			subf1: subformulas(substring(F,2,index)),
			subf2: subformulas(substring(F,index + 2, slength(F))),
			return(union({F},union(subf1,subf2))))
		else (
			subf1: subformulas(substring(F,2,index)),
			subf2: subformulas(substring(F,index + 3, slength(F))),
			return(union({F},union(subf1,subf2))))))$